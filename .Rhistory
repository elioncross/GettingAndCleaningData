length(names(X_test))
length(feature_names)
feature_names
feature_names$V2
rbind(feature_names$V2, X_train)
## Coursera Course Title: Getting and Cleaning Data
## Coursera Course ID: getdata-012
## Project: Getting and Cleaning Data Course Project
## Student: Ruben Leon
## 1. Merges the training and the test sets to create one data set.
X_train = read.table('./UCI HAR Dataset/train/X_train.txt', nrows=5)
Y_train = read.table('./UCI HAR Dataset/train/Y_train.txt',nrows=5)
X_test = read.table('./UCI HAR Dataset/test/X_test.txt',nrows=5)
Y_test = read.table('./UCI HAR Dataset/test/Y_test.txt',nrows=5)
subjects_train = read.table('./UCI HAR Dataset/train/subject_train.txt',nrows=5)
subjects_test = read.table('./UCI HAR Dataset/test/subject_test.txt',nrows=5)
activity_labels = read.table('./UCI HAR Dataset/activity_labels.txt',nrows=5)
feature_names = read.table('./UCI HAR Dataset/features.txt',nrows=5)
##train_set = cbind(subjects_train, Y_train, X_train)
##test_set = cbind(subjects_test, Y_test, X_test)
##all_set = rbind(train_set, test_set)
## 2. Extracts only the measurements on the mean and standard deviation for each
## measurement.
## 3. Uses descriptive activity names to name the activities in the data set
## 4. Appropriately labels the data set with descriptive variable names.
## 5. From the data set in step 4, creates a second, independent tidy data set
## with the average of each variable for each activity and each subject.
View(feature_names)
View(feature_names)
View(activity_labels)
## Coursera Course Title: Getting and Cleaning Data
## Coursera Course ID: getdata-012
## Project: Getting and Cleaning Data Course Project
## Student: Ruben Leon
## 1. Merges the training and the test sets to create one data set.
X_train = read.table('./UCI HAR Dataset/train/X_train.txt', nrows=5)
Y_train = read.table('./UCI HAR Dataset/train/Y_train.txt',nrows=5)
X_test = read.table('./UCI HAR Dataset/test/X_test.txt',nrows=5)
Y_test = read.table('./UCI HAR Dataset/test/Y_test.txt',nrows=5)
subjects_train = read.table('./UCI HAR Dataset/train/subject_train.txt')
subjects_test = read.table('./UCI HAR Dataset/test/subject_test.txt')
activity_labels = read.table('./UCI HAR Dataset/activity_labels.txt')
feature_names = read.table('./UCI HAR Dataset/features.txt')
##train_set = cbind(subjects_train, Y_train, X_train)
##test_set = cbind(subjects_test, Y_test, X_test)
##all_set = rbind(train_set, test_set)
## 2. Extracts only the measurements on the mean and standard deviation for each
## measurement.
## 3. Uses descriptive activity names to name the activities in the data set
## 4. Appropriately labels the data set with descriptive variable names.
## 5. From the data set in step 4, creates a second, independent tidy data set
## with the average of each variable for each activity and each subject.
view(feature_names$V2)
View(activity_labels)
View(activity_labels)
View(feature_names)
View(feature_names)
View(feature_names$V2)
View(t(feature_names$V2)
)
View(t(feature_names$V2))
matrix(feature_names$V2,1,561)
features = matrix(feature_names$V2,1,561)
features
dim(features)
dim(X_train)
rbind(features, X_train)
warnings()
clear(features)
## Coursera Course Title: Getting and Cleaning Data
## Coursera Course ID: getdata-012
## Project: Getting and Cleaning Data Course Project
## Student: Ruben Leon
## 1. Merges the training and the test sets to create one data set.
X_train = read.table('./UCI HAR Dataset/train/X_train.txt', nrows=5)
Y_train = read.table('./UCI HAR Dataset/train/Y_train.txt',nrows=5)
X_test = read.table('./UCI HAR Dataset/test/X_test.txt',nrows=5)
Y_test = read.table('./UCI HAR Dataset/test/Y_test.txt',nrows=5)
subjects_train = read.table('./UCI HAR Dataset/train/subject_train.txt')
subjects_test = read.table('./UCI HAR Dataset/test/subject_test.txt')
activity_labels = read.table('./UCI HAR Dataset/activity_labels.txt')
feature_names = read.table('./UCI HAR Dataset/features.txt')
##train_set = cbind(subjects_train, Y_train, X_train)
##test_set = cbind(subjects_test, Y_test, X_test)
##all_set = rbind(train_set, test_set)
## 2. Extracts only the measurements on the mean and standard deviation for each
## measurement.
## 3. Uses descriptive activity names to name the activities in the data set
## 4. Appropriately labels the data set with descriptive variable names.
## 5. From the data set in step 4, creates a second, independent tidy data set
## with the average of each variable for each activity and each subject.
colnames(X_train)  <- feature_names$V2
View(X_train)
## Coursera Course Title: Getting and Cleaning Data
## Coursera Course ID: getdata-012
## Project: Getting and Cleaning Data Course Project
## Student: Ruben Leon
## 1. Merges the training and the test sets to create one data set.
X_train = read.table('./UCI HAR Dataset/train/X_train.txt', nrows=5)
Y_train = read.table('./UCI HAR Dataset/train/Y_train.txt',nrows=5)
X_test = read.table('./UCI HAR Dataset/test/X_test.txt',nrows=5)
Y_test = read.table('./UCI HAR Dataset/test/Y_test.txt',nrows=5)
subjects_train = read.table('./UCI HAR Dataset/train/subject_train.txt')
subjects_test = read.table('./UCI HAR Dataset/test/subject_test.txt')
activity_labels = read.table('./UCI HAR Dataset/activity_labels.txt')
feature_names = read.table('./UCI HAR Dataset/features.txt')
colnames(X_train)  <- feature_names$V2
colnames(X_test)  <- feature_names$V2
train_set = cbind(subjects_train, Y_train, X_train)
test_set = cbind(subjects_test, Y_test, X_test)
all_set = rbind(train_set, test_set)
## 2. Extracts only the measurements on the mean and standard deviation for each
## measurement.
## 3. Uses descriptive activity names to name the activities in the data set
## 4. Appropriately labels the data set with descriptive variable names.
## 5. From the data set in step 4, creates a second, independent tidy data set
## with the average of each variable for each activity and each subject.
## Coursera Course Title: Getting and Cleaning Data
## Coursera Course ID: getdata-012
## Project: Getting and Cleaning Data Course Project
## Student: Ruben Leon
## 1. Merges the training and the test sets to create one data set.
X_train = read.table('./UCI HAR Dataset/train/X_train.txt', nrows=5)
Y_train = read.table('./UCI HAR Dataset/train/Y_train.txt',nrows=5)
X_test = read.table('./UCI HAR Dataset/test/X_test.txt',nrows=5)
Y_test = read.table('./UCI HAR Dataset/test/Y_test.txt',nrows=5)
subjects_train = read.table('./UCI HAR Dataset/train/subject_train.txt',nrows=5)
subjects_test = read.table('./UCI HAR Dataset/test/subject_test.txt',nrows=5)
activity_labels = read.table('./UCI HAR Dataset/activity_labels.txt')
feature_names = read.table('./UCI HAR Dataset/features.txt')
colnames(X_train)  <- feature_names$V2
colnames(X_test)  <- feature_names$V2
train_set = cbind(subjects_train, Y_train, X_train)
test_set = cbind(subjects_test, Y_test, X_test)
all_set = rbind(train_set, test_set)
## 2. Extracts only the measurements on the mean and standard deviation for each
## measurement.
## 3. Uses descriptive activity names to name the activities in the data set
## 4. Appropriately labels the data set with descriptive variable names.
## 5. From the data set in step 4, creates a second, independent tidy data set
## with the average of each variable for each activity and each subject.
View(all_set)
names(all_set)[1]="subject"
names(all_set)[2]="activity"
View(all_set)
View(all_set)
meanSDColNames  <- grep(".*mean\\(\\)|.*std\\(\\)", colnames(all_set))
meanSDColNames
meanSDVariables  <- grep(".*mean\\(\\)|.*std\\(\\)", colnames(all_set))
meanSDColIndexes  <- grep(".*mean\\(\\)|.*std\\(\\)", colnames(all_set))
View(all_set)
View(all_set)
meanSTDColIndexes  <- grep(".*mean\\(\\)|.*std\\(\\)", colnames(all_set))
meanSTD_set  <-  all_set[,meanSTDColIndexes]
View(meanSTD_set)
View(meanSTD_set)
meanSTDColIndexes  <- grep(".*mean\\(\\)|.*std\\(\\)", colnames(all_set))
meanSTD_set  <-  all_set[,1,2,meanSTDColIndexes]
## Coursera Course Title: Getting and Cleaning Data
## Coursera Course ID: getdata-012
## Project: Getting and Cleaning Data Course Project
## Student: Ruben Leon
## 1. Merges the training and the test sets to create one data set.
X_train = read.table('./UCI HAR Dataset/train/X_train.txt', nrows=5)
Y_train = read.table('./UCI HAR Dataset/train/Y_train.txt',nrows=5)
X_test = read.table('./UCI HAR Dataset/test/X_test.txt',nrows=5)
Y_test = read.table('./UCI HAR Dataset/test/Y_test.txt',nrows=5)
subjects_train = read.table('./UCI HAR Dataset/train/subject_train.txt',nrows=5)
subjects_test = read.table('./UCI HAR Dataset/test/subject_test.txt',nrows=5)
subjects <- rbind(subjects_train, subjects_test)
activity_labels = read.table('./UCI HAR Dataset/activity_labels.txt')
activities <- rbind(Y_train, Y_test)
feature_names = read.table('./UCI HAR Dataset/features.txt')
colnames(X_train)  <- feature_names$V2
colnames(X_test)  <- feature_names$V2
#train_set = cbind(subjects_train, Y_train, X_train)
#test_set = cbind(subjects_test, Y_test, X_test)
all_set = rbind(X_train, X_test)
## 2. Extracts only the measurements on the mean and standard deviation for each
## measurement.
meanSTDColIndexes  <- grep(".*mean\\(\\)|.*std\\(\\)", colnames(all_set))
meanSTD_set  <-  all_set[,meanSTDColIndexes]
meanSTD_set$subject <- subjects
meanSTD_set$activity <- activities
## 3. Uses descriptive activity names to name the activities in the data set
## 4. Appropriately labels the data set with descriptive variable names.
## 5. From the data set in step 4, creates a second, independent tidy data set
## with the average of each variable for each activity and each subject.
View(meanSTD_set)
View(meanSTD_set)
## Coursera Course Title: Getting and Cleaning Data
## Coursera Course ID: getdata-012
## Project: Getting and Cleaning Data Course Project
## Student: Ruben Leon
## 1. Merges the training and the test sets to create one data set.
X_train = read.table('./UCI HAR Dataset/train/X_train.txt', nrows=5)
Y_train = read.table('./UCI HAR Dataset/train/Y_train.txt',nrows=5)
X_test = read.table('./UCI HAR Dataset/test/X_test.txt',nrows=5)
Y_test = read.table('./UCI HAR Dataset/test/Y_test.txt',nrows=5)
subjects_train = read.table('./UCI HAR Dataset/train/subject_train.txt',nrows=5)
subjects_test = read.table('./UCI HAR Dataset/test/subject_test.txt',nrows=5)
subjects <- rbind(subjects_train, subjects_test)
activity_labels = read.table('./UCI HAR Dataset/activity_labels.txt')
activities <- rbind(Y_train, Y_test)
feature_names = read.table('./UCI HAR Dataset/features.txt')
colnames(X_train)  <- feature_names$V2
colnames(X_test)  <- feature_names$V2
#train_set = cbind(subjects_train, Y_train, X_train)
#test_set = cbind(subjects_test, Y_test, X_test)
all_set = rbind(X_train, X_test)
## 2. Extracts only the measurements on the mean and standard deviation for each
## measurement.
meanSTDColIndexes  <- grep(".*mean\\(\\)|.*std\\(\\)", colnames(all_set))
meanSTDTemp_set  <-  all_set[,meanSTDColIndexes]
meanSTD_set = cbind(subjects,activities, meanSTDTemp_set)
names(meanSTD_set)[1]="subject"
names(meanSTD_set)[2]="activity"
## 3. Uses descriptive activity names to name the activities in the data set
## 4. Appropriately labels the data set with descriptive variable names.
## 5. From the data set in step 4, creates a second, independent tidy data set
## with the average of each variable for each activity and each subject.
View(activities)
View(activities)
## Coursera Course Title: Getting and Cleaning Data
## Coursera Course ID: getdata-012
## Project: Getting and Cleaning Data Course Project
## Student: Ruben Leon
## 1. Merges the training and the test sets to create one data set.
X_train = read.table('./UCI HAR Dataset/train/X_train.txt', nrows=5)
Y_train = read.table('./UCI HAR Dataset/train/Y_train.txt',nrows=5)
X_test = read.table('./UCI HAR Dataset/test/X_test.txt',nrows=5)
Y_test = read.table('./UCI HAR Dataset/test/Y_test.txt',nrows=5)
subjects_train = read.table('./UCI HAR Dataset/train/subject_train.txt',nrows=5)
subjects_test = read.table('./UCI HAR Dataset/test/subject_test.txt',nrows=5)
subjects <- rbind(subjects_train, subjects_test)
activity_labels = read.table('./UCI HAR Dataset/activity_labels.txt')
activities <- rbind(Y_train, Y_test)
feature_names = read.table('./UCI HAR Dataset/features.txt')
colnames(X_train)  <- feature_names$V2
colnames(X_test)  <- feature_names$V2
#train_set = cbind(subjects_train, Y_train, X_train)
#test_set = cbind(subjects_test, Y_test, X_test)
all_set = rbind(X_train, X_test)
## 2. Extracts only the measurements on the mean and standard deviation for each
## measurement.
meanSTDColIndexes  <- grep(".*mean\\(\\)|.*std\\(\\)", colnames(all_set))
meanSTD_set  <-  all_set[,meanSTDColIndexes]
meanSTD_set$subject <- subjects$V1
meanSTD_set$activity <- activities$V1
## 3. Uses descriptive activity names to name the activities in the data set
## 4. Appropriately labels the data set with descriptive variable names.
## 5. From the data set in step 4, creates a second, independent tidy data set
## with the average of each variable for each activity and each subject.
View(meanSTD_set)
View(meanSTD_set)
## Coursera Course Title: Getting and Cleaning Data
## Coursera Course ID: getdata-012
## Project: Getting and Cleaning Data Course Project
## Student: Ruben Leon
## 1. Merges the training and the test sets to create one data set.
X_train = read.table('./UCI HAR Dataset/train/X_train.txt', nrows=5)
Y_train = read.table('./UCI HAR Dataset/train/Y_train.txt',nrows=5)
X_test = read.table('./UCI HAR Dataset/test/X_test.txt',nrows=5)
Y_test = read.table('./UCI HAR Dataset/test/Y_test.txt',nrows=5)
## subjects_train = read.table('./UCI HAR Dataset/train/subject_train.txt',nrows=5)
## subjects_test = read.table('./UCI HAR Dataset/test/subject_test.txt',nrows=5)
## subjects <- rbind(subjects_train, subjects_test)
subjects <- rbind(read.table('./UCI HAR Dataset/train/subject_train.txt',nrows=5), read.table('./UCI HAR Dataset/test/subject_test.txt',nrows=5))
activity_labels = read.table('./UCI HAR Dataset/activity_labels.txt')
activities <- rbind(Y_train, Y_test)
feature_names = read.table('./UCI HAR Dataset/features.txt')
colnames(X_train)  <- feature_names$V2
colnames(X_test)  <- feature_names$V2
#train_set = cbind(subjects_train, Y_train, X_train)
#test_set = cbind(subjects_test, Y_test, X_test)
all_set = rbind(X_train, X_test)
## 2. Extracts only the measurements on the mean and standard deviation for each
## measurement.
meanSTDColIndexes  <- grep(".*mean\\(\\)|.*std\\(\\)", colnames(all_set))
meanSTD_set  <-  all_set[,meanSTDColIndexes]
meanSTD_set$subject <- subjects$V1
meanSTD_set$activity <- activities$V1
## 3. Uses descriptive activity names to name the activities in the data set
## 4. Appropriately labels the data set with descriptive variable names.
## 5. From the data set in step 4, creates a second, independent tidy data set
## with the average of each variable for each activity and each subject.
## Coursera Course Title: Getting and Cleaning Data
## Coursera Course ID: getdata-012
## Project: Getting and Cleaning Data Course Project
## Student: Ruben Leon
## 1. Merges the training and the test sets to create one data set.
subjects <- rbind(read.table('./UCI HAR Dataset/train/subject_train.txt',nrows=5), read.table('./UCI HAR Dataset/test/subject_test.txt',nrows=5))
activity_labels = read.table('./UCI HAR Dataset/activity_labels.txt')
activities <- rbind(read.table('./UCI HAR Dataset/train/Y_train.txt',nrows=5), read.table('./UCI HAR Dataset/test/Y_test.txt',nrows=5))
feature_names = read.table('./UCI HAR Dataset/features.txt')
colnames(X_train)  <- feature_names$V2
colnames(X_test)  <- feature_names$V2
all_set = rbind(read.table('./UCI HAR Dataset/train/X_train.txt', nrows=5), read.table('./UCI HAR Dataset/test/X_test.txt',nrows=5))
## 2. Extracts only the measurements on the mean and standard deviation for each
## measurement.
meanSTDColIndexes  <- grep(".*mean\\(\\)|.*std\\(\\)", colnames(all_set))
meanSTD_set  <-  all_set[,meanSTDColIndexes]
meanSTD_set$subject <- subjects$V1
meanSTD_set$activity <- activities$V1
## 3. Uses descriptive activity names to name the activities in the data set
## 4. Appropriately labels the data set with descriptive variable names.
## 5. From the data set in step 4, creates a second, independent tidy data set
## with the average of each variable for each activity and each subject.
## Coursera Course Title: Getting and Cleaning Data
## Coursera Course ID: getdata-012
## Project: Getting and Cleaning Data Course Project
## Student: Ruben Leon
## 1. Merges the training and the test sets to create one data set.
X_train = read.table('./UCI HAR Dataset/train/X_train.txt', nrows=5)
X_test = read.table('./UCI HAR Dataset/test/X_test.txt',nrows=5)
subjects <- rbind(read.table('./UCI HAR Dataset/train/subject_train.txt',nrows=5), read.table('./UCI HAR Dataset/test/subject_test.txt',nrows=5))
activity_labels = read.table('./UCI HAR Dataset/activity_labels.txt')
activities <- rbind(read.table('./UCI HAR Dataset/train/Y_train.txt',nrows=5), read.table('./UCI HAR Dataset/test/Y_test.txt',nrows=5))
feature_names = read.table('./UCI HAR Dataset/features.txt')
colnames(X_train)  <- feature_names$V2
colnames(X_test)  <- feature_names$V2
all_set = rbind(X_train, X_test)
## 2. Extracts only the measurements on the mean and standard deviation for each
## measurement.
meanSTDColIndexes  <- grep(".*mean\\(\\)|.*std\\(\\)", colnames(all_set))
meanSTD_set  <-  all_set[,meanSTDColIndexes]
meanSTD_set$subject <- subjects$V1
meanSTD_set$activity <- activities$V1
## 3. Uses descriptive activity names to name the activities in the data set
## 4. Appropriately labels the data set with descriptive variable names.
## 5. From the data set in step 4, creates a second, independent tidy data set
## with the average of each variable for each activity and each subject.
View(meanSTD_set)
View(meanSTD_set)
## Coursera Course Title: Getting and Cleaning Data
## Coursera Course ID: getdata-012
## Project: Getting and Cleaning Data Course Project
## Student: Ruben Leon
## 1. Merges the training and the test sets to create one data set.
subjects <- rbind(read.table('./UCI HAR Dataset/train/subject_train.txt',nrows=5), read.table('./UCI HAR Dataset/test/subject_test.txt',nrows=5))
activity_labels = read.table('./UCI HAR Dataset/activity_labels.txt', col.names=c("ActivityID", "ActivityName"))
activities <- rbind(read.table('./UCI HAR Dataset/train/Y_train.txt',nrows=5), read.table('./UCI HAR Dataset/test/Y_test.txt',nrows=5))
feature_names = read.table('./UCI HAR Dataset/features.txt')
X_train = read.table('./UCI HAR Dataset/train/X_train.txt', nrows=5)
X_test = read.table('./UCI HAR Dataset/test/X_test.txt',nrows=5)
colnames(X_train)  <- feature_names$V2
colnames(X_test)  <- feature_names$V2
all_set = rbind(X_train, X_test)
## 2. Extracts only the measurements on the mean and standard deviation for each
## measurement.
meanSTDColIndexes  <- grep(".*mean\\(\\)|.*std\\(\\)", colnames(all_set))
meanSTD_set  <-  all_set[,meanSTDColIndexes]
meanSTD_set$SubjectID <- subjects$V1
meanSTD_set$ActivityID <- activities$V1
## 3. Uses descriptive activity names to name the activities in the data set
meanSTD_set  <-  merge(meanSTD_set,activityLabels)
## 4. Appropriately labels the data set with descriptive variable names.
## 5. From the data set in step 4, creates a second, independent tidy data set
## with the average of each variable for each activity and each subject.
## Coursera Course Title: Getting and Cleaning Data
## Coursera Course ID: getdata-012
## Project: Getting and Cleaning Data Course Project
## Student: Ruben Leon
## 1. Merges the training and the test sets to create one data set.
subjects <- rbind(read.table('./UCI HAR Dataset/train/subject_train.txt',nrows=5), read.table('./UCI HAR Dataset/test/subject_test.txt',nrows=5))
activity_labels = read.table('./UCI HAR Dataset/activity_labels.txt', col.names=c("ActivityID", "ActivityName"))
activities <- rbind(read.table('./UCI HAR Dataset/train/Y_train.txt',nrows=5), read.table('./UCI HAR Dataset/test/Y_test.txt',nrows=5))
feature_names = read.table('./UCI HAR Dataset/features.txt')
X_train = read.table('./UCI HAR Dataset/train/X_train.txt', nrows=5)
X_test = read.table('./UCI HAR Dataset/test/X_test.txt',nrows=5)
colnames(X_train)  <- feature_names$V2
colnames(X_test)  <- feature_names$V2
all_set = rbind(X_train, X_test)
## 2. Extracts only the measurements on the mean and standard deviation for each
## measurement.
meanSTDColIndexes  <- grep(".*mean\\(\\)|.*std\\(\\)", colnames(all_set))
meanSTD_set  <-  all_set[,meanSTDColIndexes]
meanSTD_set$SubjectID <- subjects$V1
meanSTD_set$ActivityID <- activities$V1
## 3. Uses descriptive activity names to name the activities in the data set
meanSTD_set  <-  merge(meanSTD_set,activity_labels)
## 4. Appropriately labels the data set with descriptive variable names.
## 5. From the data set in step 4, creates a second, independent tidy data set
## with the average of each variable for each activity and each subject.
View(meanSTD_set)
View(meanSTD_set)
## Coursera Course Title: Getting and Cleaning Data
## Coursera Course ID: getdata-012
## Project: Getting and Cleaning Data Course Project
## Student: Ruben Leon
## 1. Merges the training and the test sets to create one data set.
subjects <- rbind(read.table('./UCI HAR Dataset/train/subject_train.txt',nrows=5), read.table('./UCI HAR Dataset/test/subject_test.txt',nrows=5))
activity_labels = read.table('./UCI HAR Dataset/activity_labels.txt', col.names=c("ActivityID", "ActivityName"))
activities <- rbind(read.table('./UCI HAR Dataset/train/Y_train.txt',nrows=5), read.table('./UCI HAR Dataset/test/Y_test.txt',nrows=5))
feature_names = read.table('./UCI HAR Dataset/features.txt')
X_train = read.table('./UCI HAR Dataset/train/X_train.txt', nrows=5)
X_test = read.table('./UCI HAR Dataset/test/X_test.txt',nrows=5)
colnames(X_train)  <- feature_names$V2
colnames(X_test)  <- feature_names$V2
all_set = rbind(X_train, X_test)
## 2. Extracts only the measurements on the mean and standard deviation for each
## measurement.
meanSTDColIndexes  <- grep(".*mean\\(\\)|.*std\\(\\)", colnames(all_set))
meanSTD_set  <-  all_set[,meanSTDColIndexes]
meanSTD_set$SubjectID <- subjects$V1
meanSTD_set$ActivityID <- activities$V1
## 3. Uses descriptive activity names to name the activities in the data set
meanSTD_set  <-  merge(meanSTD_set,activity_labels)
## 4. Appropriately labels the data set with descriptive variable names.
labels <- colnames(meanSTD_set)
labels <- gsub('\\(|\\)',"", labels)
labels <- gsub('\\-',"", labels)
labels <- gsub('\\,',"",  labels)
labels <- gsub('mean', labels, replacement="Mean")
labels <- gsub('std',  labels, replacement="Std")
colnames(meanSTD_set) <- labels
## 5. From the data set in step 4, creates a second, independent tidy data set
## with the average of each variable for each activity and each subject.
View(meanSTD_set)
View(meanSTD_set)
View(meanSTD_set)
View(meanSTD_set)
levels(factor(meanSTD_set$SubjectID, meanSTD_set$ActivityID))
library(doBy)
tidydata <- summaryBy(labels ~ SubjectID + ActivityID, data=meanSTD_set, FUN=c(mean,sd))
tidydata <- summaryBy(.~ SubjectID + ActivityID, data=meanSTD_set, keep.names=TRUE, FUN=c(mean,sd))
View(tidydata)
View(tidydata)
tidydata <- summaryBy(.~ SubjectID + ActivityName, data=meanSTD_set, keep.names=TRUE, FUN=c(mean,sd))
View(tidydata)
View(tidydata)
View(meanSTD_set)
View(meanSTD_set)
tidydata <- summaryBy(.~ SubjectID + ActivityName, data=meanSTD_set, FUN=c(mean,sd))
View(tidydata)
View(tidydata)
tidydata <- summaryBy(.~ SubjectID + ActivityID, data=meanSTD_set, FUN=c(mean,sd))
View(tidydata)
View(tidydata)
tidydata <- summaryBy(.~ SubjectID + ActivityID + ActivityName, keep.names=TRUE, data=meanSTD_set, FUN=c(mean,sd))
View(tidydata)
View(tidydata)
## Coursera Course Title: Getting and Cleaning Data
## Coursera Course ID: getdata-012
## Project: Getting and Cleaning Data Course Project
## Student: Ruben Leon
## 1. Merges the training and the test sets to create one data set.
subjects <- rbind(read.table('./UCI HAR Dataset/train/subject_train.txt',nrows=5), read.table('./UCI HAR Dataset/test/subject_test.txt',nrows=5))
activity_labels = read.table('./UCI HAR Dataset/activity_labels.txt', col.names=c("ActivityID", "ActivityName"))
activities <- rbind(read.table('./UCI HAR Dataset/train/Y_train.txt',nrows=5), read.table('./UCI HAR Dataset/test/Y_test.txt',nrows=5))
feature_names = read.table('./UCI HAR Dataset/features.txt')
X_train = read.table('./UCI HAR Dataset/train/X_train.txt', nrows=5)
X_test = read.table('./UCI HAR Dataset/test/X_test.txt',nrows=5)
colnames(X_train)  <- feature_names$V2
colnames(X_test)  <- feature_names$V2
all_set = rbind(X_train, X_test)
## 2. Extracts only the measurements on the mean and standard deviation for each
## measurement.
meanSTDColIndexes  <- grep(".*mean\\(\\)|.*std\\(\\)", colnames(all_set))
meanSTD_set  <-  all_set[,meanSTDColIndexes]
meanSTD_set$SubjectID <- subjects$V1
meanSTD_set$ActivityID <- activities$V1
## 3. Uses descriptive activity names to name the activities in the data set
meanSTD_set  <-  merge(meanSTD_set,activity_labels)
## 4. Appropriately labels the data set with descriptive variable names.
labels <- colnames(meanSTD_set)
labels <- gsub('\\(|\\)',"", labels)
labels <- gsub('\\-',"", labels)
labels <- gsub('\\,',"",  labels)
labels <- gsub('mean', labels, replacement="Mean")
labels <- gsub('std',  labels, replacement="Std")
colnames(meanSTD_set) <- labels
## 5. From the data set in step 4, creates a second, independent tidy data set
## with the average of each variable for each activity and each subject.
library(doBy)
tidydata <- summaryBy(.~ SubjectID + ActivityID + ActivityName, keep.names=TRUE, data=meanSTD_set, FUN=c(mean,sd))
write.table(tidydata,file="tidydata.txt")
## Coursera Course Title: Getting and Cleaning Data
## Coursera Course ID: getdata-012
## Project: Getting and Cleaning Data Course Project
## Student: Ruben Leon
## 1. Merges the training and the test sets to create one data set.
subjects <- rbind(read.table('./UCI HAR Dataset/train/subject_train.txt'), read.table('./UCI HAR Dataset/test/subject_test.txt'))
activity_labels = read.table('./UCI HAR Dataset/activity_labels.txt', col.names=c("ActivityID", "ActivityName"))
activities <- rbind(read.table('./UCI HAR Dataset/train/Y_train.txt'), read.table('./UCI HAR Dataset/test/Y_test.txt'))
feature_names = read.table('./UCI HAR Dataset/features.txt')
X_train = read.table('./UCI HAR Dataset/train/X_train.txt')
X_test = read.table('./UCI HAR Dataset/test/X_test.txt')
colnames(X_train)  <- feature_names$V2
colnames(X_test)  <- feature_names$V2
all_set = rbind(X_train, X_test)
## 2. Extracts only the measurements on the mean and standard deviation for each
## measurement.
meanSTDColIndexes  <- grep(".*mean\\(\\)|.*std\\(\\)", colnames(all_set))
meanSTD_set  <-  all_set[,meanSTDColIndexes]
meanSTD_set$SubjectID <- subjects$V1
meanSTD_set$ActivityID <- activities$V1
## 3. Uses descriptive activity names to name the activities in the data set
meanSTD_set  <-  merge(meanSTD_set,activity_labels)
## 4. Appropriately labels the data set with descriptive variable names.
labels <- colnames(meanSTD_set)
labels <- gsub('\\(|\\)',"", labels)
labels <- gsub('\\-',"", labels)
labels <- gsub('\\,',"",  labels)
labels <- gsub('mean', labels, replacement="Mean")
labels <- gsub('std',  labels, replacement="Std")
colnames(meanSTD_set) <- labels
## 5. From the data set in step 4, creates a second, independent tidy data set
## with the average of each variable for each activity and each subject.
library(doBy)
tidydata <- summaryBy(.~ SubjectID + ActivityID + ActivityName, keep.names=TRUE, data=meanSTD_set, FUN=c(mean,sd))
write.table(tidydata,file="tidydata.txt")
